{"version":3,"sources":["hooks/useInputState.js","UpdateTodo.js","TodoList.js","CreateTodo.js","Todo.js","hooks/useTodoState.js","App.js","reportWebVitals.js","index.js"],"names":["useInputState","initialState","useState","state","setState","e","target","value","UpdateTodo","props","task","input","handleInput","onSubmit","preventDefault","updateTodo","id","style","width","onChange","autoFocus","border","outline","fontSize","backgroundColor","height","marginLeft","paddingLeft","borderRadius","TodoList","List","Stack","spacing","todos","map","todo","Paper","elevation","ListItem","secondaryAction","IconButton","aria-label","onClick","deleteTodo","ListItemIcon","Checkbox","tabIndex","checked","completed","completeTodo","update","ListItemText","textDecoration","CreateTodo","handleTask","resetTask","addTodo","TextField","fullWidth","placeholder","marginBottom","ToDo","initialTodos","setTodos","newTask","uuidv4","filter","updatedTodo","updatedTask","useTodoState","Grid","container","justifyContent","sx","margin","AppBar","Typography","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee3e11cd.chunk.js","sourcesContent":["import { useState } from \"react\";\nexport default function useInputState(initialState) {\n  const [state, setState] = useState(initialState);\n  const handleInput = (e) => {\n    setState(e.target.value);\n  };\n  const clearInput = () => {\n    setState(\"\");\n  };\n  return [state, handleInput, clearInput];\n}\n","import React from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nexport default function UpdateTodo(props) {\n  const [input, handleInput] = useInputState(props.task);\n  const updateTodo = (e) => {\n    e.preventDefault();\n    props.updateTodo(props.id, input);\n  };\n  return (\n    <form onSubmit={updateTodo} style={{ width: \"75%\" }}>\n      <input\n        value={input}\n        onChange={handleInput}\n        autoFocus\n        style={{\n          border: \"none\",\n          outline: \"none\",\n          fontSize: \"1rem\",\n          backgroundColor: \"rgba(0,0,0,0.1)\",\n          height: \"40px\",\n          width: \"100%\",\n          marginLeft: \"-10px\",\n          paddingLeft: \"10px\",\n          borderRadius: \"5px\",\n        }}\n      />\n    </form>\n  );\n}\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Stack from \"@mui/material/Stack\";\nimport Paper from \"@mui/material/Paper\";\n\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nimport UpdateTodo from \"./UpdateTodo\";\nexport default function TodoList(props) {\n  return (\n    <List>\n      <Stack spacing={0.5}>\n        {props.todos.map((todo) => (\n          <Paper elevation={3}>\n            <ListItem\n              secondaryAction={\n                <>\n                  <IconButton\n                    aria-label=\"edit\"\n                    onClick={() => props.updateTodo(todo.id)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => props.deleteTodo(todo.id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </>\n              }\n            >\n              <ListItemIcon>\n                <Checkbox\n                  tabIndex={-1}\n                  checked={todo.completed}\n                  onClick={() => props.completeTodo(todo.id)}\n                />\n              </ListItemIcon>\n              {todo.update ? (\n                <UpdateTodo\n                  task={todo.task}\n                  id={todo.id}\n                  updateTodo={props.updateTodo}\n                />\n              ) : (\n                <ListItemText\n                  style={{\n                    textDecoration: todo.completed ? \"line-through\" : \"\",\n                  }}\n                >\n                  {todo.task}\n                </ListItemText>\n              )}\n            </ListItem>\n          </Paper>\n        ))}\n      </Stack>\n    </List>\n  );\n}\n","import { React } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport useInputState from \"./hooks/useInputState\";\nexport default function CreateTodo(props) {\n  const [task, handleTask, resetTask] = useInputState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.addTodo(task);\n    resetTask(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        value={task}\n        fullWidth\n        onChange={handleTask}\n        placeholder=\"Add ToDo item\"\n        style={{ marginBottom: \"10px\" }}\n      ></TextField>\n    </form>\n  );\n}\n","import { React } from \"react\";\nimport useTodoState from \"./hooks/useTodoState\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport TodoList from \"./TodoList\";\nimport CreateTodo from \"./CreateTodo\";\nexport default function ToDo() {\n  const initialTodos = [\n    {\n      id: 1,\n      task: \"Clean House\",\n      completed: true,\n      update: false,\n    },\n    {\n      id: 2,\n      task: \"Take shower\",\n      completed: false,\n      update: false,\n    },\n    {\n      id: 3,\n      task: \"Walk dog\",\n      completed: true,\n      update: false,\n    },\n  ];\n  const { todos, addTodo, deleteTodo, completeTodo, updateTodo } =\n    useTodoState(initialTodos);\n  return (\n    <Grid container justifyContent=\"center\" sx={{ margin: \"2rem\" }}>\n      <AppBar>\n        <Typography>TO DO REACT HOOK</Typography>\n      </AppBar>\n      <Grid item sx={{ width: \"40%\" }}>\n        <CreateTodo addTodo={addTodo} />\n\n        <TodoList\n          todos={todos}\n          deleteTodo={deleteTodo}\n          completeTodo={completeTodo}\n          updateTodo={updateTodo}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport default function useTodoState(initialTodos) {\n  const [todos, setTodos] = useState(initialTodos);\n  return {\n    todos,\n    addTodo: (newTask) => {\n      setTodos([\n        ...todos,\n        { id: uuidv4(), task: newTask, completed: false, update: false },\n      ]);\n    },\n    deleteTodo: (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    completeTodo: (id) => {\n      const updatedTodo = todos.map((todo) =>\n        todo.id === id\n          ? {\n              id: todo.id,\n              task: todo.task,\n              completed: !todo.completed,\n              update: todo.update,\n            }\n          : todo\n      );\n      setTodos(updatedTodo);\n    },\n    updateTodo: (id, updatedTask) => {\n      const updatedTodo = todos.map((todo) =>\n        todo.id === id\n          ? {\n              id: todo.id,\n              task: !updatedTask ? todo.task : updatedTask,\n              completed: todo.completed,\n              update: !todo.update,\n            }\n          : todo\n      );\n      setTodos(updatedTodo);\n    },\n  };\n}\n","import \"./App.css\";\nimport Todo from \"./Todo\";\nfunction App() {\n  return <Todo />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}